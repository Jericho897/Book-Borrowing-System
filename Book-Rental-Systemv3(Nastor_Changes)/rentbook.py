# Form implementation generated from reading ui file 'rentbook.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QFileDialog, QCalendarWidget


class RentBookDialog(object):
    def setupUi(self, RentBook):
        RentBook.setObjectName("RentBook")
        RentBook.resize(580, 367)
        RentBook.setStyleSheet("background:rgb(72, 72, 72)")
        self.label_4 = QtWidgets.QLabel(parent=RentBook)
        self.label_4.setGeometry(QtCore.QRect(29, 85, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color:white;")
        self.label_4.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.Confirm = QtWidgets.QPushButton(parent=RentBook)
        self.Confirm.setGeometry(QtCore.QRect(60, 310, 221, 40))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.Confirm.setFont(font)
        self.Confirm.setStyleSheet("QPushButton {\n"
"                background-color: rgb(6, 217, 66);\n"
"                color: white;\n"
"                border: none;\n"
"                border-radius: 5px;\n"
"                padding: 10px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(50, 255, 100);\n"
"            }")
        self.Confirm.setFlat(False)
        self.Confirm.setObjectName("Confirm")
        self.label_5 = QtWidgets.QLabel(parent=RentBook)
        self.label_5.setGeometry(QtCore.QRect(80, 120, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color:white;")
        self.label_5.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.bookscbox = QtWidgets.QComboBox(parent=RentBook)
        self.bookscbox.setGeometry(QtCore.QRect(170, 90, 371, 22))
        self.bookscbox.setStyleSheet(" background: white")
        self.bookscbox.setObjectName("bookscbox")
        self.Cancel = QtWidgets.QPushButton(parent=RentBook)
        self.Cancel.setGeometry(QtCore.QRect(310, 310, 231, 40))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.Cancel.setFont(font)
        self.Cancel.setStyleSheet("QPushButton {\n"
"                background-color: rgb(200, 46, 18);\n"
"                color: white;\n"
"                border: none;\n"
"                border-radius: 5px;\n"
"                padding: 10px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(255, 100, 100);\n"
"            }")
        self.Cancel.setObjectName("Cancel")
        self.customercbox = QtWidgets.QComboBox(parent=RentBook)
        self.customercbox.setGeometry(QtCore.QRect(170, 126, 371, 22))
        self.customercbox.setStyleSheet(" background: white")
        self.customercbox.setObjectName("customercbox")
        self.label_6 = QtWidgets.QLabel(parent=RentBook)
        self.label_6.setGeometry(QtCore.QRect(80, 160, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color:white;")
        self.label_6.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.frame = QtWidgets.QFrame(parent=RentBook)
        self.frame.setGeometry(QtCore.QRect(-10, 0, 591, 61))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setBold(True)
        font.setWeight(75)
        self.frame.setFont(font)
        self.frame.setStyleSheet("background-color: rgb(50, 50, 50);")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(parent=self.frame)
        self.label.setGeometry(QtCore.QRect(230, 0, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color:white;")
        self.label.setObjectName("label")
        self.rentfeefield = QtWidgets.QLineEdit(parent=RentBook)
        self.rentfeefield.setGeometry(QtCore.QRect(170, 165, 371, 22))
        self.rentfeefield.setStyleSheet(" background: white")
        self.rentfeefield.setFrame(False)
        self.rentfeefield.setObjectName("rentfeefield")
        self.label_7 = QtWidgets.QLabel(parent=RentBook)
        self.label_7.setGeometry(QtCore.QRect(80, 210, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color:white;")
        self.label_7.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=RentBook)
        self.label_8.setGeometry(QtCore.QRect(341, 208, 21, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color:white;")
        self.label_8.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.startdate = QtWidgets.QPushButton(parent=RentBook)
        self.startdate.setGeometry(QtCore.QRect(180, 206, 151, 40))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.startdate.setFont(font)
        self.startdate.setStyleSheet("QPushButton {\n"
"                background-color: rgb(255, 170, 0);\n"
"                color: white;\n"
"                border: none;\n"
"                border-radius: 5px;\n"
"                padding: 10px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(255, 196, 78);\n"
"            }")
        self.startdate.setFlat(False)
        self.startdate.setObjectName("startdate")
        self.duedate = QtWidgets.QPushButton(parent=RentBook)
        self.duedate.setGeometry(QtCore.QRect(370, 206, 151, 40))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.duedate.setFont(font)
        self.duedate.setStyleSheet("QPushButton {\n"
"                background-color: rgb(76, 94, 255);\n"
"                color: white;\n"
"                border: none;\n"
"                border-radius: 5px;\n"
"                padding: 10px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color:rgb(106, 153, 255);\n"
"            }")
        self.duedate.setFlat(False)
        self.duedate.setObjectName("duedate")

        self.retranslateUi(RentBook)
        QtCore.QMetaObject.connectSlotsByName(RentBook)

      
        self.startdate.clicked.connect(self.select_start_date)
        self.duedate.clicked.connect(self.select_due_date)
 
       
    def retranslateUi(self, RentBook):
        _translate = QtCore.QCoreApplication.translate
        RentBook.setWindowTitle(_translate("RentBook", "Rent Book"))
        self.label_4.setText(_translate("RentBook", "Available Books:"))
        self.Confirm.setText(_translate("RentBook", "Confirm"))
        self.label_5.setText(_translate("RentBook", "Customer:"))
        self.Cancel.setText(_translate("RentBook", "Cancel"))
        self.label_6.setText(_translate("RentBook", "Rent Fee:"))
        self.label.setText(_translate("RentBook", "Rent Book"))
        self.label_7.setText(_translate("RentBook", "Rent Date:"))
        self.label_8.setText(_translate("RentBook", "to"))
        self.startdate.setText(_translate("RentBook", "Start Date"))
        self.duedate.setText(_translate("RentBook", "Due Date"))

    def select_start_date(self):
        # Create a calendar widget
        try:
                calendar = QCalendarWidget()
                calendar.setWindowModality(QtCore.Qt.WindowModality.ApplicationModal)

                # Connect the selectionChanged signal to a function
                calendar.selectionChanged.connect(lambda: self.on_start_date_selected(calendar))

                # Show the calendar widget
                calendar.show()
        except Exception as e:
             print(e)

    def on_start_date_selected(self, calendar):
        # Get the selected date from the calendar widget
        selected_date = calendar.selectedDate()

        # Format the selected date as a string
        formatted_date = selected_date.toString(QtCore.Qt.DateFormat.ISODate)

        # Set the selected date as the text of the startdate button
        self.startdate.setText(formatted_date) 

    def select_due_date(self):
        # Create a calendar widget
        calendar = QCalendarWidget()
        calendar.setWindowModality(QtCore.Qt.WindowModality.ApplicationModal)

        # Connect the selectionChanged signal to a function
        calendar.selectionChanged.connect(lambda: self.on_date_selected(calendar, self.duedate))

        # Show the calendar widget
        calendar.show()

    def on_date_selected(self, calendar, button):
        # Get the selected date from the calendar widget
        selected_date = calendar.selectedDate()

        # Format the selected date as a string
        formatted_date = selected_date.toString(QtCore.Qt.DateFormat.ISODate)

        # Set the selected date as the text of the button
        button.setText(formatted_date)